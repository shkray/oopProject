{"ast":null,"code":"// src/services/apiService.js\nimport axios from 'axios';\nconst BASE_URL = 'https://localhost:7066/api';\nexport const getGenres = async () => {\n  const response = await axios.get(`${BASE_URL}/Genres`);\n  return response.data;\n};\nexport const getMangaReview = async mangaId => {\n  let reviews = [];\n  const response = await axios.get(`${BASE_URL}/Reviews`);\n  for (let review in response.data) {\n    const submangaid = review[\"mangaid\"];\n    if (submangaid === mangaId) {\n      reviews.push(review);\n    }\n  }\n  return reviews;\n};\nexport const putReview = async (reviewid, mangaid, description, grade) => {\n  const reviewData = {\n    mangaId: mangaid,\n    description: description,\n    grade: grade,\n    id: reviewid\n  };\n  const response = await axios.put(`${BASE_URL}/Reviews/${reviewid}`, reviewData);\n  return response.data;\n};\nexport const postReview = async (mangaid, description, grade) => {\n  const reviewData = {\n    mangaId: mangaid,\n    description: description,\n    grade: grade\n  };\n  const response = await axios.post(`${BASE_URL}/Reviews`, reviewData);\n  return response.data;\n};\nexport const getAuthors = async () => {\n  const response = await axios.get(`${BASE_URL}/Authors`);\n  return response.data;\n};\nexport const getMangas = async () => {\n  const response = await axios.get(`${BASE_URL}/Mangas`);\n  return response.data;\n};\nexport const getReviews = async () => {\n  const response = await axios.get(`${BASE_URL}/Reviews`);\n  return response.data;\n};","map":{"version":3,"names":["axios","BASE_URL","getGenres","response","get","data","getMangaReview","mangaId","reviews","review","submangaid","push","putReview","reviewid","mangaid","description","grade","reviewData","id","put","postReview","post","getAuthors","getMangas","getReviews"],"sources":["C:/Users/cutac/Desktop/oopProject/frontback.client/manga-app/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'https://localhost:7066/api';\r\n\r\nexport const getGenres = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Genres`);\r\n    \r\n    return response.data;\r\n};\r\n\r\nexport const getMangaReview = async (mangaId) => {\r\n    let reviews = []\r\n\r\n    const response = await axios.get(`${BASE_URL}/Reviews`);\r\n    for (let review in response.data) {\r\n        const submangaid = review[\"mangaid\"];\r\n        if (submangaid === mangaId) {\r\n            reviews.push(review);\r\n        }\r\n    }\r\n\r\n    return reviews;\r\n};\r\n\r\nexport const putReview = async (reviewid, mangaid, description, grade) => {\r\n    const reviewData = {\r\n        mangaId: mangaid,\r\n        description: description,\r\n        grade: grade,\r\n        id: reviewid\r\n    };\r\n  \r\n    const response = await axios.put(`${BASE_URL}/Reviews/${reviewid}`, reviewData);\r\n    return response.data\r\n};\r\n\r\nexport const postReview = async ( mangaid, description, grade) => {\r\n    const reviewData = {\r\n        mangaId: mangaid,\r\n        description: description,\r\n        grade: grade,\r\n    };\r\n  \r\n    const response = await axios.post(`${BASE_URL}/Reviews`, reviewData);\r\n    return response.data\r\n};\r\n\r\nexport const getAuthors = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Authors`);\r\n    return response.data;\r\n};\r\n\r\nexport const getMangas = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Mangas`);\r\n    return response.data;\r\n};\r\n\r\nexport const getReviews = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Reviews`);\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,SAAS,CAAC;EAEtD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAIC,OAAO,GAAG,EAAE;EAEhB,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,UAAU,CAAC;EACvD,KAAK,IAAIQ,MAAM,IAAIN,QAAQ,CAACE,IAAI,EAAE;IAC9B,MAAMK,UAAU,GAAGD,MAAM,CAAC,SAAS,CAAC;IACpC,IAAIC,UAAU,KAAKH,OAAO,EAAE;MACxBC,OAAO,CAACG,IAAI,CAACF,MAAM,CAAC;IACxB;EACJ;EAEA,OAAOD,OAAO;AAClB,CAAC;AAED,OAAO,MAAMI,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,KAAK,KAAK;EACtE,MAAMC,UAAU,GAAG;IACfV,OAAO,EAAEO,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,KAAK,EAAEA,KAAK;IACZE,EAAE,EAAEL;EACR,CAAC;EAED,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACmB,GAAG,CAAC,GAAGlB,QAAQ,YAAYY,QAAQ,EAAE,EAAEI,UAAU,CAAC;EAC/E,OAAOd,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMe,UAAU,GAAG,MAAAA,CAAQN,OAAO,EAAEC,WAAW,EAAEC,KAAK,KAAK;EAC9D,MAAMC,UAAU,GAAG;IACfV,OAAO,EAAEO,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,KAAK,EAAEA;EACX,CAAC;EAED,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACqB,IAAI,CAAC,GAAGpB,QAAQ,UAAU,EAAEgB,UAAU,CAAC;EACpE,OAAOd,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,UAAU,CAAC;EACvD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMpB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,SAAS,CAAC;EACtD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMrB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,UAAU,CAAC;EACvD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}