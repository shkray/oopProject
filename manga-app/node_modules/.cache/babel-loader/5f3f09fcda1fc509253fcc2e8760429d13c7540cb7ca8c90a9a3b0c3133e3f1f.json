{"ast":null,"code":"// src/services/apiService.js\nimport axios from 'axios';\nconst BASE_URL = 'https://localhost:7066/api';\nexport const auth = async () => {\n  const authData = {\n    username: \"Admin\",\n    password: \"secret_admin\"\n  };\n  console.log(authData);\n  const response = await axios.post(`${BASE_URL}/Auth/login`, authData);\n  return response.data;\n};\nexport const getGenres = async () => {\n  const response = await axios.get(`${BASE_URL}/Genres`);\n  return response.data;\n};\nexport const getMangaReview = async mangaId => {\n  let reviews = [];\n  const response = await axios.get(`${BASE_URL}/Reviews`);\n  //console.log(\"mangaid: \" + mangaId + \", response: \" + response.data.toString());\n  for (let review of response.data) {\n    const submangaid = review[\"mangaId\"];\n    console.log(\"submangaid: \" + submangaid + \", mangaid: \" + mangaId + \", review: \" + review.toString());\n    if (submangaid === mangaId) {\n      reviews.push(review);\n    }\n  }\n  return reviews;\n};\nexport const putReview = async (reviewid, mangaid, description, grade) => {\n  const reviewData = {\n    mangaId: mangaid,\n    description: description,\n    grade: grade,\n    id: reviewid\n  };\n  const response = await axios.put(`${BASE_URL}/Reviews/${reviewid}`, reviewData);\n  return response.data;\n};\nexport const postReview = async (mangaid, description, grade) => {\n  const reviewData = {\n    mangaId: mangaid,\n    description: description,\n    grade: grade\n  };\n  const response = await axios.post(`${BASE_URL}/Reviews`, reviewData);\n  return response.data;\n};\nexport const getAuthors = async () => {\n  const authData = auth();\n  let config = {\n    headers: {\n      \"Authorization\": \"Bearer \" + authData[\"token\"]\n    }\n  };\n  const response = await axios.get(`${BASE_URL}/Authors`);\n  return response.data;\n};\nexport const getMangas = async () => {\n  const response = await axios.get(`${BASE_URL}/Mangas`);\n  return response.data;\n};\nexport const getReviews = async () => {\n  const response = await axios.get(`${BASE_URL}/Reviews`);\n  return response.data;\n};","map":{"version":3,"names":["axios","BASE_URL","auth","authData","username","password","console","log","response","post","data","getGenres","get","getMangaReview","mangaId","reviews","review","submangaid","toString","push","putReview","reviewid","mangaid","description","grade","reviewData","id","put","postReview","getAuthors","config","headers","getMangas","getReviews"],"sources":["C:/Users/cutac/Desktop/123/frontback.client/manga-app/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'https://localhost:7066/api';\r\n\r\nexport const auth = async () => {\r\n    const authData = {\r\n        username: \"Admin\",\r\n        password: \"secret_admin\"\r\n    };\r\n\r\n    console.log(authData)\r\n\r\n    const response = await axios.post(`${BASE_URL}/Auth/login`, authData);\r\n    return response.data;\r\n}\r\n\r\nexport const getGenres = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Genres`);\r\n    \r\n    return response.data;\r\n};\r\n\r\nexport const getMangaReview = async (mangaId) => {\r\n    let reviews = []\r\n\r\n    const response = await axios.get(`${BASE_URL}/Reviews`);\r\n    //console.log(\"mangaid: \" + mangaId + \", response: \" + response.data.toString());\r\n    for (let review of response.data) {\r\n        const submangaid = review[\"mangaId\"];\r\n        console.log(\"submangaid: \" + submangaid + \", mangaid: \" + mangaId + \", review: \" + review.toString());\r\n        if (submangaid === mangaId) {\r\n            reviews.push(review);\r\n        }\r\n    }\r\n\r\n    return reviews;\r\n};\r\n\r\nexport const putReview = async (reviewid, mangaid, description, grade) => {\r\n    const reviewData = {\r\n        mangaId: mangaid,\r\n        description: description,\r\n        grade: grade,\r\n        id: reviewid\r\n    };\r\n  \r\n    const response = await axios.put(`${BASE_URL}/Reviews/${reviewid}`, reviewData);\r\n    return response.data\r\n};\r\n\r\nexport const postReview = async ( mangaid, description, grade) => {\r\n    const reviewData = {\r\n        mangaId: mangaid,\r\n        description: description,\r\n        grade: grade,\r\n    };\r\n  \r\n    const response = await axios.post(`${BASE_URL}/Reviews`, reviewData);\r\n    return response.data\r\n};\r\n\r\nexport const getAuthors = async () => {\r\n    const authData = auth();\r\n\r\n    let config = {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + authData[\"token\"],\r\n        }\r\n    }\r\n\r\n    const response = await axios.get(`${BASE_URL}/Authors`);\r\n    return response.data;\r\n};\r\n\r\nexport const getMangas = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Mangas`);\r\n    return response.data;\r\n};\r\n\r\nexport const getReviews = async () => {\r\n    const response = await axios.get(`${BASE_URL}/Reviews`);\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,OAAO,MAAMC,IAAI,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,QAAQ,GAAG;IACbC,QAAQ,EAAE,OAAO;IACjBC,QAAQ,EAAE;EACd,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAErB,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,QAAQ,aAAa,EAAEE,QAAQ,CAAC;EACrE,OAAOK,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMH,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,GAAGX,QAAQ,SAAS,CAAC;EAEtD,OAAOO,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAIC,OAAO,GAAG,EAAE;EAEhB,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,GAAGX,QAAQ,UAAU,CAAC;EACvD;EACA,KAAK,IAAIe,MAAM,IAAIR,QAAQ,CAACE,IAAI,EAAE;IAC9B,MAAMO,UAAU,GAAGD,MAAM,CAAC,SAAS,CAAC;IACpCV,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGU,UAAU,GAAG,aAAa,GAAGH,OAAO,GAAG,YAAY,GAAGE,MAAM,CAACE,QAAQ,CAAC,CAAC,CAAC;IACrG,IAAID,UAAU,KAAKH,OAAO,EAAE;MACxBC,OAAO,CAACI,IAAI,CAACH,MAAM,CAAC;IACxB;EACJ;EAEA,OAAOD,OAAO;AAClB,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,KAAK,KAAK;EACtE,MAAMC,UAAU,GAAG;IACfX,OAAO,EAAEQ,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,KAAK,EAAEA,KAAK;IACZE,EAAE,EAAEL;EACR,CAAC;EAED,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAAC2B,GAAG,CAAC,GAAG1B,QAAQ,YAAYoB,QAAQ,EAAE,EAAEI,UAAU,CAAC;EAC/E,OAAOjB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMkB,UAAU,GAAG,MAAAA,CAAQN,OAAO,EAAEC,WAAW,EAAEC,KAAK,KAAK;EAC9D,MAAMC,UAAU,GAAG;IACfX,OAAO,EAAEQ,OAAO;IAChBC,WAAW,EAAEA,WAAW;IACxBC,KAAK,EAAEA;EACX,CAAC;EAED,MAAMhB,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,QAAQ,UAAU,EAAEwB,UAAU,CAAC;EACpE,OAAOjB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM1B,QAAQ,GAAGD,IAAI,CAAC,CAAC;EAEvB,IAAI4B,MAAM,GAAG;IACTC,OAAO,EAAE;MACL,eAAe,EAAE,SAAS,GAAG5B,QAAQ,CAAC,OAAO;IACjD;EACJ,CAAC;EAED,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,GAAGX,QAAQ,UAAU,CAAC;EACvD,OAAOO,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMxB,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,GAAGX,QAAQ,SAAS,CAAC;EACtD,OAAOO,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMuB,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMzB,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,GAAGX,QAAQ,UAAU,CAAC;EACvD,OAAOO,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}